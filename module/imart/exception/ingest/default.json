{
  "description": "Pipeline for parsing imart exception logs. Requires ingest_user_agent plugin.",
  "processors": [
    {
      "grok": {
        "field": "message",
        "patterns": [
          "log\\.generating\\.time=%{DATA:imart.exception.timestamp}\nlog\\.level=%{LOGLEVEL:imart.log.level}\nlog\\.logger\\.name=%{DATA:imart.log.logger}\nlog\\.id=%{DATA:imart.log.id}\nlog\\.thread\\.id=%{DATA:imart.exception.threadid}\nlog\\.thread\\.group=%{DATA:imart.exception.threadgroup}\nlog\\.message=%{GREEDYDATA:imart.exception.message}\n{1,3}(?<imart.exception.stacktrace>([^\n\r]+[\n\r]{1,2})*)"
        ],
        "ignore_missing": true
      }
    },
    {
      "remove": {
        "field": "message"
      }
    },
    {
      "rename": {
        "field": "@timestamp",
        "target_field": "read_timestamp"
      }
    },
    {
      "date": {
        "field": "imart.exception.timestamp",
        "target_field": "@timestamp",
        "formats": ["EEE MMM dd H:m:s 'JST' YYYY"],
        "timezone": "Asia/Tokyo"
      }
    },
    {
      "remove": {
        "field": "imart.exception.timestamp"
      }
    },
    {
      "trim": {
        "field": "imart.exception.stacktrace",
        "ignore_missing": true
      }
    },
    {
      "append": {
        "field": "imart.log_type",
        "value": "exception"
      }
    }
  ],
  "on_failure": [
    {
      "set": {
        "field": "error",
        "value": "{{ _ingest.on_failure_message }}"
      }
    }
  ]
}