{
  "description": "Pipeline for parsing imart access logs. Requires ingest_user_agent plugin.",
  "processors": [
    {
      "grok": {
        "field": "message",
        "patterns": [
          "%{IPORHOST:imart.access.remote_ip} - %{DATA:imart.access.user_name} \\[%{HTTPDATE:imart.access.time}\\] \"%{WORD:imart.access.method} %{DATA:imart.access.url} [\\w]+/%{NUMBER:imart.access.http_version}\" %{NUMBER:imart.access.response_code} %{DATA:imart.access.body_sent.bytes} (\"%{DATA:imart.access.referrer}\")?( \"%{DATA:imart.access.agent}\")",
          "\\[%{IPORHOST:imart.access.remote_ip}\\] - %{DATA:imart.access.user_name} \\[%{HTTPDATE:imart.access.time}\\] \"%{WORD:imart.access.method} %{DATA:imart.access.url} HTTP/%{NUMBER:imart.access.http_version}\" %{NUMBER:imart.access.response_code} %{DATA:imart.access.body_sent.bytes} (\"%{DATA:imart.access.referrer}\")?( \"%{DATA:imart.access.agent}\")"
        ],
        "ignore_missing": true
      }
    },
    {
      "remove": {
        "field": "message"
      }
    },
    {
      "rename": {
        "field": "@timestamp",
        "target_field": "read_timestamp"
      }
    },
    {
      "date": {
        "field": "imart.access.time",
        "target_field": "@timestamp",
        "formats": [
          "dd/MMM/YYYY:H:m:s Z"
        ],
        "timezone": "Asia/Tokyo"
      }
    },
    {
      "remove": {
        "field": "imart.access.time"
      }
    },
    {
      "script": {
        "lang": "painless",
        "inline": "if (ctx.imart.access.body_sent.bytes == \"-\") { ctx.imart.access.body_sent.bytes = \"0\"}"
      }
    },
    {
      "convert": {
        "field": "imart.access.body_sent.bytes",
        "type": "integer"
      }
    },
    {
      "user_agent": {
        "field": "imart.access.agent",
        "target_field": "imart.access.user_agent",
        "ignore_failure": true
      }
    },
    {
      "remove": {
        "field": "imart.access.agent",
        "ignore_failure": true
      }
    },
    {
      "append": {
        "field": "imart.log_type",
        "value": "access"
      }
    }
  ],
  "on_failure": [
    {
      "set": {
        "field": "grok_parse_error",
        "value": "{{ _ingest.on_failure_message }}"
      }
    }
  ]
}